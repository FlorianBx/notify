version: '3'

vars:
  VERSION: '0.2.0'
  BUILD_DIR: 'build'
  APP_NAME: 'notify.app'
  BINARY_NAME: 'notify'

tasks:
  default:
    desc: Build the project
    deps: [build]

  help:
    desc: Show available tasks
    cmds:
      - task --list

  clean:
    desc: Remove build artifacts
    cmds:
      - echo "üßπ Cleaning build artifacts..."
      - rm -rf {{.BUILD_DIR}}
      - rm -rf .build

  build:
    desc: Build the app bundle
    cmds:
      - echo "üî® Building {{.BINARY_NAME}} v{{.VERSION}}..."
      - ./build.sh

  test:
    desc: Run tests
    cmds:
      - echo "üß™ Running tests..."
      - swift test

  test-parallel:
    desc: Run tests in parallel
    cmds:
      - swift test --parallel

  install:
    desc: Build and install to /Applications
    deps: [build]
    cmds:
      - echo "üì¶ Installing {{.APP_NAME}}..."
      - sudo rm -rf "/Applications/{{.APP_NAME}}"
      - sudo cp -R "{{.BUILD_DIR}}/{{.APP_NAME}}" "/Applications/"
      - sudo mkdir -p /usr/local/bin
      - sudo ln -sf "/Applications/{{.APP_NAME}}/Contents/MacOS/{{.BINARY_NAME}}" "/usr/local/bin/{{.BINARY_NAME}}"
      - echo "‚úÖ Installation complete!"

  uninstall:
    desc: Uninstall from /Applications
    cmds:
      - echo "üóëÔ∏è Uninstalling {{.APP_NAME}}..."
      - sudo rm -rf "/Applications/{{.APP_NAME}}"
      - sudo rm -f "/usr/local/bin/{{.BINARY_NAME}}"
      - echo "‚úÖ Uninstallation complete!"

  release:
    desc: Clean build and create release archive
    deps: [clean, build]
    cmds:
      - echo "üì¶ Creating release archive..."
      - cd {{.BUILD_DIR}} && tar -czf "{{.BINARY_NAME}}-{{.VERSION}}-darwin.tar.gz" "{{.APP_NAME}}"
      - echo "‚úÖ Release archive created"

  ci:
    desc: Run full CI pipeline
    cmds:
      - task clean
      - task test
      - task build
      - echo "üéâ CI pipeline completed!"